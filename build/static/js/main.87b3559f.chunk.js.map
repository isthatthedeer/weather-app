{"version":3,"sources":["components/welcome.jsx","components/chart.js","components/weather.jsx","components/search.jsx","components/main.jsx","App.js","serviceWorker.js","index.js"],"names":["Welcome","react_default","a","createElement","className","CSSTransition","in","appear","timeout","classNames","react_router_dom","to","index_es","icon","faSearch","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartData","labels","data","map","el","tempMin","slice","datasets","borderColor","temp","chartOptions","legend","display","elements","point","radius","scales","yAxes","ticks","max","Math","apply","tempMax","min","stepSize","gridLines","xAxes","es","options","Component","Weather","weatherToday","forecast","city","country","isNaN","day","Infinity","onClick","click","i","key","chart","React","Search","onSubmit","getData","type","name","placeholder","error","faArrowLeft","faArrowRight","moment","require","API_KEY","Main","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","preventDefault","target","value","fetch","concat","then","result","ok","json","Error","reduce","reduceData","setState","flag","catch","stop","_x","arguments","weekForecast","matchIcon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faCloud","faSun","findMode","input","counted","accu","obj","keys","b","reduced","values","list","total","objectSpread","defineProperty","date","dt_txt","format","weather","main","temp_min","temp_max","_loop","today","add","dayForecast","filter","push","Number","length","toFixed","handleSearchClick","search","App","vh","window","innerHeight","document","documentElement","style","setProperty","updateDimensions","addEventListener","removeEventListener","react_router","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87b3559f.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { CSSTransition } from 'react-transition-group';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst Welcome = () => (\n        <div className=\"container\">\n            <CSSTransition\n                in={true}\n                appear={true}\n                timeout={450}\n                classNames=\"fade\"\n                >\n                <div className=\"welcome\">\n                    <h1>Welcome to WeatherApp</h1>\n                    <p>To check the weather click the search button below</p>\n                    <NavLink to=\"/main\"><FontAwesomeIcon icon={faSearch} /></NavLink>\n                </div>\n            </CSSTransition>\n        </div>\n);\n\n\nexport default Welcome;","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n\nclass Chart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartData: {\n                labels: this.props.data.map(el => {return el.tempMin}).slice(2),\n                datasets: [{\n                borderColor: 'rgb(255, 255, 255)',\n                data: this.props.data.map(el => {return el.temp}).slice(2),\n                }]\n            },\n            chartOptions: {\n                legend: {\n                    display: false\n                },\n                elements: { \n                    point: { \n                        radius: 0 \n                    } \n                },\n                scales: {\n                    yAxes: [{\n                        display: false,\n                        ticks: {\n                            display: false,\n                            max: Math.max.apply(null, this.props.data.map(el => {return el.tempMax}).slice(2)) + 3,\n                            min: Math.min.apply(null, this.props.data.map(el => {return el.tempMin}).slice(2)) - 2,\n                            stepSize: 1\n                        },\n                        gridLines: {\n                            display:false\n                        }  \n                    }],\n                    xAxes: [{\n                        gridLines: {\n                            display:false\n                        },\n                        display: false,\n                        ticks: {\n                            display: false,\n                        },\n                    }]\n                }\n            }\n        } \n    }\n    render() {\n        return <div className=\"chart\">\n            <Line \n                data = {this.state.chartData}\n                options= {this.state.chartOptions}\n            />\n        </div>\n    }\n}\n\nexport default Chart;","import React from \"react\";\nimport Chart from './chart';\nimport { CSSTransition } from 'react-transition-group';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nclass Weather extends React.Component {\n    \n    render() {\n        const weatherToday = this.props.data[1];\n        const forecast = this.props.data.slice(2);\n        return (\n            <CSSTransition\n                in={true}\n                appear={true}\n                timeout={450}\n                classNames=\"fade\"\n                >\n                <div className=\"info\">\n                    <div className=\"row--top\">\n                        <div className=\"weatherToday\">\n                            <p>{this.props.data[0].city}, {this.props.data[0].country}</p>\n                            {isNaN(weatherToday.temp) === false && <h1>{weatherToday.temp}&deg;</h1>}\n                            {weatherToday.day !== '' && <p>{weatherToday.day}</p>}\n                            <p>\n                                {weatherToday.tempMin !== Infinity && <span>{weatherToday.tempMin}&deg;</span>}\n                                {weatherToday.tempMax !== -Infinity && <span>{weatherToday.tempMax}&deg;</span>}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row--bottom\">\n                        <div className=\"button\" onClick={this.props.click}><FontAwesomeIcon icon={faSearch} /></div>\n                        <div className=\"forecast forecast__top\">\n                            {forecast.map((el,i) => {\n                            return <div key={i}>\n                                { el.day !== '' && <p>{ el.day.slice(0,3) }</p>}\n                                { el.icon !== '' && <p><FontAwesomeIcon icon={el.icon} /></p>}\n                                { el.tempMax !== -Infinity && <p>{ el.tempMax }&deg;</p>}\n                            </div>\n                        })}\n                        </div>\n                        <div className=\"chart\">\n                            <Chart data={this.props.data}/>\n                        </div>\n                        <div className=\"forecast forecast__bottom\">\n                            {forecast.map((el,i) => {\n                            return <div key={i}>\n                                { el.tempMin !== Infinity && <p>{ el.tempMin }&deg;</p>}\n                            </div>\n                        })}\n                        </div>\n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\n\nexport default Weather;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from 'react-transition-group';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nconst Search = (props) => (\n    <CSSTransition\n        in={true}\n        appear={true}\n        timeout={450}\n        classNames=\"fade\"\n        >\n        <div className=\"search\">\n            <p>Please enter city and country:</p>\n            <form onSubmit={props.getData}>\n                <input type=\"text\" name=\"city\" placeholder=\"City...\"/>\n                <input type=\"text\" name=\"country\" placeholder=\"Country...\"/>\n                {props.error && <p>{props.error}</p>}\n                <div className=\"row\">\n                    <Link to=\"/\"><FontAwesomeIcon icon={faArrowLeft} /></Link>\n                    <button><FontAwesomeIcon icon={faArrowRight} /></button>\n                </div>\n            </form>\n        </div>\n    </CSSTransition>\n);\n\nexport default Search;\n\n","import React from 'react';\nimport { faBolt, faCloudRain, faCloudShowersHeavy, faSnowflake, faCloud, faSun } from '@fortawesome/free-solid-svg-icons'\nimport Weather from './weather';\nimport Search from './search';\n\nconst moment = require('./../../node_modules/moment/moment.js');\nconst API_KEY = '3d76823d3b8852cd38d0ca9b1fccd7ff';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            forecast: [],\n            flag: false\n        }\n    }\n    getData = async (e) => {\n        e.preventDefault();\n        const city = e.target.elements.city.value;\n        const country = e.target.elements.country.value;\n\n        /* input validation; fetching data and catching potential errors */\n        if (city && country) {\n            fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&APPID=${API_KEY}&units=metric`)\n            .then(result => {\n                if (result.ok) {return result.json();}\n                else {throw new Error(\"Connection error!\");}})\n            .then(reduce => {return this.reduceData(reduce)})\n            .then(data => {return this.setState({forecast: data, flag: true, error: \"\"});})\n            .catch(() => this.setState({forecast: [], error: 'City is not found.'}));\n        } else {\n            this.setState({\n                error: 'Both fields must be filled out.'\n            })\n        }\n    }\n\n    reduceData = (data) => {\n        /* preparing basic information */\n        const weekForecast = [{city: data.city.name, country: data.city.country}];\n\n        /* function that matches weather description with appropriate icon */\n        const matchIcon = (icon) => {\n            switch (icon) {\n                case 'Thunderstorm': return faBolt;\n                case 'Drizzle': return faCloudRain;\n                case 'Rain': return faCloudShowersHeavy;\n                case 'Snow': return faSnowflake;\n                case 'Clouds': return faCloud;\n                case 'Clear': return faSun;\n                default: return '';\n            }\n        }\n        /* function that returns the most frequent element in array */\n        const findMode = (input) => {\n            let counted = input.reduce((accu, obj) => { \n                if (obj in accu) {\n                    accu[obj]++;\n                } else {\n                    accu[obj] = 1;\n                }\n                return accu;\n            }, {});\n            let mode = Object.keys(counted).reduce((a, b) => counted[a] > counted[b] ? a : b);\n            return mode;\n        }\n\n        /* reducing data - leaving only information that will be used */\n        let reduced = Object.values(data.list.reduce((total, el, i) => ({\n            ...total, [i]: {\n                        date: el.dt_txt.slice(0,10), \n                        day: moment(el.dt_txt).format('dddd'),\n                        icon: el.weather[0].main,\n                        temp: el.main.temp,\n                        tempMin: el.main.temp_min,\n                        tempMax: el.main.temp_max}\n            }), []))\n\n        /* preparing forecast for next five days */\n        for (let i = 0; i < 6; i++) {\n            let today = moment().add(i, 'days').format('dddd');\n            /* grouping information based on specific day; finding min, max and average temperatures; preparing icon */\n            let dayForecast = reduced.filter(el => el.day === today)\n            weekForecast.push({\n                day: findMode(dayForecast.map(el => el.day)),\n                icon: matchIcon(findMode(dayForecast.map(el => el.icon))),\n                temp: Number((dayForecast.reduce((accu, obj) => accu + obj.temp, 0) / dayForecast.length).toFixed()),\n                tempMin: Number(Math.min.apply(null, dayForecast.map(el => el.tempMin)).toFixed()),\n                tempMax: Number(Math.max.apply(null, dayForecast.map(el => el.tempMax)).toFixed())\n            })\n        }\n        return weekForecast;\n    }\n\n    /* resetting results and displaying search screen */\n    handleSearchClick = () => {\n        this.setState({forecast: [], flag: false})\n    }\n\n    /* conditional rendering - search or result screen whether the data is present */\n    render() {\n        const { flag } = this.state;\n        return (\n                <div className=\"container\">\n                    {flag \n                        ? <Weather data={this.state.forecast} click={this.handleSearchClick}/>\n                        : <Search getData={this.getData} error={this.state.error}/>}\n                </div>\n        );\n    }\n}\n\n\nexport default Main;","import React from \"react\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport Welcome from \"./components/welcome.jsx\"\nimport Main from \"./components/main.jsx\"\n\nclass App extends React.Component {\n\n  updateDimensions() {\n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  }\n\n  componentDidMount() {\n      this.updateDimensions();\n      window.addEventListener(\"resize\", this.updateDimensions());\n  }\n\n  componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateDimensions());\n  }\n\n  render() {\n    return (\n        <HashRouter>\n          <Switch>\n            <Route path=\"/\" component={Welcome} exact/>\n            <Route path=\"/main\" component={Main}/>\n          </Switch>\n        </HashRouter>\n      );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}